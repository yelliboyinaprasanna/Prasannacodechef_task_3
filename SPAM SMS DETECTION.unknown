{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO389MPYPnlTJbz2WfYudpW"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":20,"metadata":{"id":"P20mIIhdzu5m","executionInfo":{"status":"ok","timestamp":1691853123502,"user_tz":-330,"elapsed":428,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras import layers"]},{"cell_type":"code","source":["# Reading the data\n","df = pd.read_csv(\"/content/spam.csv\",encoding='latin-1')\n","df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"gRdpHr3TzzY_","executionInfo":{"status":"ok","timestamp":1691852421560,"user_tz":-330,"elapsed":453,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}},"outputId":"2c922616-9a23-45d4-d978-e3d70717eef8"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     v1                                                 v2 Unnamed: 2  \\\n","0   ham  Go until jurong point, crazy.. Available only ...        NaN   \n","1   ham                      Ok lar... Joking wif u oni...        NaN   \n","2  spam  Free entry in 2 a wkly comp to win FA Cup fina...        NaN   \n","3   ham  U dun say so early hor... U c already then say...        NaN   \n","4   ham  Nah I don't think he goes to usf, he lives aro...        NaN   \n","\n","  Unnamed: 3 Unnamed: 4  \n","0        NaN        NaN  \n","1        NaN        NaN  \n","2        NaN        NaN  \n","3        NaN        NaN  \n","4        NaN        NaN  "],"text/html":["\n","\n","  <div id=\"df-2ea20331-c989-4742-85b8-57951b7a9c4a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>v1</th>\n","      <th>v2</th>\n","      <th>Unnamed: 2</th>\n","      <th>Unnamed: 3</th>\n","      <th>Unnamed: 4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ham</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ham</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>spam</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ham</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ham</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ea20331-c989-4742-85b8-57951b7a9c4a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-0e070f7e-dec3-4536-a703-80f734cee8c8\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0e070f7e-dec3-4536-a703-80f734cee8c8')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-0e070f7e-dec3-4536-a703-80f734cee8c8 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2ea20331-c989-4742-85b8-57951b7a9c4a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2ea20331-c989-4742-85b8-57951b7a9c4a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["df = df.drop(['Unnamed: 2','Unnamed: 3','Unnamed: 4'],axis=1)\n","df = df.rename(columns={'v1':'label','v2':'Text'})\n","df['label_enc'] = df['label'].map({'ham':0,'spam':1})\n","df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"zfqpZnK80Aep","executionInfo":{"status":"ok","timestamp":1691852425583,"user_tz":-330,"elapsed":430,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}},"outputId":"4e31077c-5e2c-4136-f5b8-fc1b117a8eaa"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  label                                               Text  label_enc\n","0   ham  Go until jurong point, crazy.. Available only ...          0\n","1   ham                      Ok lar... Joking wif u oni...          0\n","2  spam  Free entry in 2 a wkly comp to win FA Cup fina...          1\n","3   ham  U dun say so early hor... U c already then say...          0\n","4   ham  Nah I don't think he goes to usf, he lives aro...          0"],"text/html":["\n","\n","  <div id=\"df-d8aebcd1-78d6-45ab-82e6-65efff898625\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>Text</th>\n","      <th>label_enc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ham</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ham</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>spam</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ham</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ham</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d8aebcd1-78d6-45ab-82e6-65efff898625')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-09534cb2-2c3f-4569-a45a-eb0cb4e2a3d9\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-09534cb2-2c3f-4569-a45a-eb0cb4e2a3d9')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-09534cb2-2c3f-4569-a45a-eb0cb4e2a3d9 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d8aebcd1-78d6-45ab-82e6-65efff898625 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d8aebcd1-78d6-45ab-82e6-65efff898625');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["sns.countplot(x=df['label'])\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":450},"id":"3EMYW7R60FxJ","executionInfo":{"status":"ok","timestamp":1691852430439,"user_tz":-330,"elapsed":729,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}},"outputId":"85413810-0d27-4a9f-a7f0-63bfc8775d2c"},"execution_count":4,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Find average number of tokens in all sentences\n","avg_words_len=round(sum([len(i.split()) for i in df['Text']])/len(df['Text']))\n","print(avg_words_len)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UCf2kdMJ0Jw1","executionInfo":{"status":"ok","timestamp":1691852500160,"user_tz":-330,"elapsed":388,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}},"outputId":"d9a65e28-cfbe-46c5-eae4-f9f8f3e5fb09"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["15\n"]}]},{"cell_type":"code","source":["# Finding Total no of unique words in corpus\n","s = set()\n","for sent in df['Text']:\n","  for word in sent.split():\n","\t  s.add(word)\n","total_words_length=len(s)\n","print(total_words_length)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xOgyL33_0MxP","executionInfo":{"status":"ok","timestamp":1691852497296,"user_tz":-330,"elapsed":395,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}},"outputId":"4f2a9b85-2015-4e16-ba4d-ca5920a731e2"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["15585\n"]}]},{"cell_type":"code","source":["# Splitting data for Training and testing\n","from sklearn.model_selection import train_test_split\n","\n","X, y = np.asanyarray(df['Text']), np.asanyarray(df['label_enc'])\n","new_df = pd.DataFrame({'Text': X, 'label': y})\n","X_train, X_test, y_train, y_test = train_test_split(\n","\tnew_df['Text'], new_df['label'], test_size=0.2, random_state=42)\n","X_train.shape, y_train.shape, X_test.shape, y_test.shape\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KkAgioas0jgy","executionInfo":{"status":"ok","timestamp":1691852437023,"user_tz":-330,"elapsed":431,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}},"outputId":"61ca8726-6182-4f57-c4c7-83f591d18758"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((4457,), (4457,), (1115,), (1115,))"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.metrics import classification_report,accuracy_score\n","\n","tfidf_vec = TfidfVectorizer().fit(X_train)\n","X_train_vec,X_test_vec = tfidf_vec.transform(X_train),tfidf_vec.transform(X_test)\n","\n","baseline_model = MultinomialNB()\n","baseline_model.fit(X_train_vec,y_train)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"Ahm1QiFC0m8h","executionInfo":{"status":"ok","timestamp":1691852441147,"user_tz":-330,"elapsed":446,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}},"outputId":"a7a6c0e1-c54f-433f-ff30-44d02cca6d1c"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MultinomialNB()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MultinomialNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MultinomialNB</label><div class=\"sk-toggleable__content\"><pre>MultinomialNB()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["from tensorflow.keras.layers import TextVectorization\n","\n","MAXTOKENS=total_words_length\n","OUTPUTLEN=avg_words_len\n","\n","text_vec = TextVectorization(\n","\tmax_tokens=MAXTOKENS,\n","\tstandardize='lower_and_strip_punctuation',\n","\toutput_mode='int',\n","\toutput_sequence_length=OUTPUTLEN\n",")\n","text_vec.adapt(X_train)\n"],"metadata":{"id":"KaMNL9DC0q2A","executionInfo":{"status":"ok","timestamp":1691852506551,"user_tz":-330,"elapsed":810,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["embedding_layer = layers.Embedding(\n","\tinput_dim=MAXTOKENS,\n","\toutput_dim=128,\n","\tembeddings_initializer='uniform',\n","\tinput_length=OUTPUTLEN\n",")"],"metadata":{"id":"mg6F0MxK00Gb","executionInfo":{"status":"ok","timestamp":1691852510779,"user_tz":-330,"elapsed":399,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["input_layer = layers.Input(shape=(1,), dtype=tf.string)\n","vec_layer = text_vec(input_layer)\n","embedding_layer_model = embedding_layer(vec_layer)\n","x = layers.GlobalAveragePooling1D()(embedding_layer_model)\n","x = layers.Flatten()(x)\n","x = layers.Dense(32, activation='relu')(x)\n","output_layer = layers.Dense(1, activation='sigmoid')(x)\n","model_1 = keras.Model(input_layer, output_layer)\n","\n","model_1.compile(optimizer='adam', loss=keras.losses.BinaryCrossentropy(\n","\tlabel_smoothing=0.5), metrics=['accuracy'])\n"],"metadata":{"id":"e5YKIdN_01oC","executionInfo":{"status":"ok","timestamp":1691852515896,"user_tz":-330,"elapsed":690,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import precision_score, recall_score, f1_score\n","\n","def compile_model(model):\n","\t'''\n","\tsimply compile the model with adam optimzer\n","\t'''\n","\tmodel.compile(optimizer=keras.optimizers.Adam(),\n","\t\t\t\tloss=keras.losses.BinaryCrossentropy(),\n","\t\t\t\tmetrics=['accuracy'])\n","\n","def fit_model(model, epochs, X_train=X_train, y_train=y_train,\n","\t\t\tX_test=X_test, y_test=y_test):\n","\t'''\n","\tfit the model with given epochs, train\n","\tand test data\n","\t'''\n","\thistory = model.fit(X_train,\n","\t\t\t\t\t\ty_train,\n","\t\t\t\t\t\tepochs=epochs,\n","\t\t\t\t\t\tvalidation_data=(X_test, y_test),\n","\t\t\t\t\t\tvalidation_steps=int(0.2*len(X_test)))\n","\treturn history\n","\n","def evaluate_model(model, X, y):\n","\t'''\n","\tevaluate the model and returns accuracy,\n","\tprecision, recall and f1-score\n","\t'''\n","\ty_preds = np.round(model.predict(X))\n","\taccuracy = accuracy_score(y, y_preds)\n","\tprecision = precision_score(y, y_preds)\n","\trecall = recall_score(y, y_preds)\n","\tf1 = f1_score(y, y_preds)\n","\n","\tmodel_results_dict = {'accuracy': accuracy,\n","\t\t\t\t\t\t'precision': precision,\n","\t\t\t\t\t\t'recall': recall,\n","\t\t\t\t\t\t'f1-score': f1}\n","\n","\treturn model_results_dict\n"],"metadata":{"id":"Q4IvfJeK07Ax","executionInfo":{"status":"ok","timestamp":1691852469140,"user_tz":-330,"elapsed":393,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["input_layer = layers.Input(shape=(1,), dtype=tf.string)\n","vec_layer = text_vec(input_layer)\n","embedding_layer_model = embedding_layer(vec_layer)\n","bi_lstm = layers.Bidirectional(layers.LSTM(\n","\t64, activation='tanh', return_sequences=True))(embedding_layer_model)\n","lstm = layers.Bidirectional(layers.LSTM(64))(bi_lstm)\n","flatten = layers.Flatten()(lstm)\n","dropout = layers.Dropout(.1)(flatten)\n","x = layers.Dense(32, activation='relu')(dropout)\n","output_layer = layers.Dense(1, activation='sigmoid')(x)\n","model_2 = keras.Model(input_layer, output_layer)\n","\n","compile_model(model_2) # compile the model\n","history_2 = fit_model(model_2, epochs=5) # fit the model\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qTIF5pTT0_J3","executionInfo":{"status":"ok","timestamp":1691852612948,"user_tz":-330,"elapsed":92124,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}},"outputId":"cd238100-f9e0-46d7-b37e-4a0ad6519736"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n","140/140 [==============================] - 25s 116ms/step - loss: 0.1519 - accuracy: 0.9482 - val_loss: 0.0838 - val_accuracy: 0.9785\n","Epoch 2/5\n","140/140 [==============================] - 14s 100ms/step - loss: 0.0241 - accuracy: 0.9924 - val_loss: 0.0955 - val_accuracy: 0.9830\n","Epoch 3/5\n","140/140 [==============================] - 14s 103ms/step - loss: 0.0047 - accuracy: 0.9989 - val_loss: 0.1360 - val_accuracy: 0.9650\n","Epoch 4/5\n","140/140 [==============================] - 13s 94ms/step - loss: 0.0018 - accuracy: 0.9993 - val_loss: 0.1364 - val_accuracy: 0.9785\n","Epoch 5/5\n","140/140 [==============================] - 14s 103ms/step - loss: 5.1780e-05 - accuracy: 1.0000 - val_loss: 0.1460 - val_accuracy: 0.9785\n"]}]},{"cell_type":"code","source":["import tensorflow_hub as hub\n","\n","# model with Sequential api\n","model_3 = keras.Sequential()\n","\n","# universal-sentence-encoder layer\n","# directly from tfhub\n","use_layer = hub.KerasLayer(\"https://tfhub.dev/google/universal-sentence-encoder/4\",\n","\t\t\t\t\t\ttrainable=False,\n","\t\t\t\t\t\tinput_shape=[],\n","\t\t\t\t\t\tdtype=tf.string,\n","\t\t\t\t\t\tname='USE')\n","model_3.add(use_layer)\n","model_3.add(layers.Dropout(0.2))\n","model_3.add(layers.Dense(64, activation=keras.activations.relu))\n","model_3.add(layers.Dense(1, activation=keras.activations.sigmoid))\n","\n","compile_model(model_3)\n","\n","history_3 = fit_model(model_3, epochs=5)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L05eUmCy1Oq7","executionInfo":{"status":"ok","timestamp":1691852662952,"user_tz":-330,"elapsed":38704,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}},"outputId":"7110b200-74f0-4cd5-d74d-251299808131"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n","140/140 [==============================] - 6s 25ms/step - loss: 0.2876 - accuracy: 0.9210 - val_loss: 0.1130 - val_accuracy: 0.9668\n","Epoch 2/5\n","140/140 [==============================] - 3s 20ms/step - loss: 0.0815 - accuracy: 0.9778 - val_loss: 0.0706 - val_accuracy: 0.9767\n","Epoch 3/5\n","140/140 [==============================] - 4s 29ms/step - loss: 0.0584 - accuracy: 0.9836 - val_loss: 0.0590 - val_accuracy: 0.9794\n","Epoch 4/5\n","140/140 [==============================] - 3s 19ms/step - loss: 0.0426 - accuracy: 0.9879 - val_loss: 0.0528 - val_accuracy: 0.9830\n","Epoch 5/5\n","140/140 [==============================] - 3s 21ms/step - loss: 0.0408 - accuracy: 0.9879 - val_loss: 0.0500 - val_accuracy: 0.9839\n"]}]},{"cell_type":"code","source":["baseline_model_results = evaluate_model(baseline_model, X_test_vec, y_test)\n","model_1_results = evaluate_model(model_1, X_test, y_test)\n","model_2_results = evaluate_model(model_2, X_test, y_test)\n","model_3_results = evaluate_model(model_3, X_test, y_test)\n","\n","total_results = pd.DataFrame({'MultinomialNB Model':baseline_model_results,\n","\t\t\t\t\t\t\t'Custom-Vec-Embedding Model':model_1_results,\n","\t\t\t\t\t\t\t'Bidirectional-LSTM Model':model_2_results,\n","\t\t\t\t\t\t\t'USE-Transfer learning Model':model_3_results}).transpose()\n","\n","total_results\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":227},"id":"Q1SUxoAN1cOR","executionInfo":{"status":"ok","timestamp":1691852705760,"user_tz":-330,"elapsed":9189,"user":{"displayName":"Bijivemula chandra Mohan reddy","userId":"12901537189724530327"}},"outputId":"3f7adc94-9650-4eeb-f56b-0eee1cbc6ae5"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["35/35 [==============================] - 0s 2ms/step\n","35/35 [==============================] - 4s 35ms/step\n","35/35 [==============================] - 3s 17ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["                             accuracy  precision    recall  f1-score\n","MultinomialNB Model          0.962332   1.000000  0.720000  0.837209\n","Custom-Vec-Embedding Model   0.826906   0.369697  0.406667  0.387302\n","Bidirectional-LSTM Model     0.978475   0.950000  0.886667  0.917241\n","USE-Transfer learning Model  0.983857   0.971429  0.906667  0.937931"],"text/html":["\n","\n","  <div id=\"df-e7a54452-a2f4-4275-b0ac-2a37f1a9847a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>accuracy</th>\n","      <th>precision</th>\n","      <th>recall</th>\n","      <th>f1-score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>MultinomialNB Model</th>\n","      <td>0.962332</td>\n","      <td>1.000000</td>\n","      <td>0.720000</td>\n","      <td>0.837209</td>\n","    </tr>\n","    <tr>\n","      <th>Custom-Vec-Embedding Model</th>\n","      <td>0.826906</td>\n","      <td>0.369697</td>\n","      <td>0.406667</td>\n","      <td>0.387302</td>\n","    </tr>\n","    <tr>\n","      <th>Bidirectional-LSTM Model</th>\n","      <td>0.978475</td>\n","      <td>0.950000</td>\n","      <td>0.886667</td>\n","      <td>0.917241</td>\n","    </tr>\n","    <tr>\n","      <th>USE-Transfer learning Model</th>\n","      <td>0.983857</td>\n","      <td>0.971429</td>\n","      <td>0.906667</td>\n","      <td>0.937931</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e7a54452-a2f4-4275-b0ac-2a37f1a9847a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-31bdef9a-e3fe-4187-a671-78e2112d8297\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-31bdef9a-e3fe-4187-a671-78e2112d8297')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-31bdef9a-e3fe-4187-a671-78e2112d8297 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e7a54452-a2f4-4275-b0ac-2a37f1a9847a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e7a54452-a2f4-4275-b0ac-2a37f1a9847a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":[],"metadata":{"id":"NZGRTApc1ffH"},"execution_count":null,"outputs":[]}]}